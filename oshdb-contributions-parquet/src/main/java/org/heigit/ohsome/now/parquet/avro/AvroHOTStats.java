/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.heigit.ohsome.now.parquet.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AvroHOTStats extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5191444636709593998L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroHOTStats\",\"namespace\":\"org.heigit.ohsome.now.parquet.avro\",\"fields\":[{\"name\":\"contrib_id\",\"type\":{\"type\":\"fixed\",\"name\":\"AvroContribId\",\"doc\":\"a combined id from osm-type(1), osm-id(8), changeset-timestamp(8), changeset-id(8)\",\"size\":25}},{\"name\":\"osm_id\",\"type\":\"long\"},{\"name\":\"changeset_id\",\"type\":\"long\"},{\"name\":\"changeset_timestamp\",\"type\":{\"type\":\"long\",\"locicalType\":\"timestamp-millis\"}},{\"name\":\"hashtags\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"tree\",\"type\":[\"null\",\"int\"]},{\"name\":\"building_area\",\"type\":[\"null\",\"double\"]},{\"name\":\"building_area_delta\",\"type\":[\"null\",\"double\"]},{\"name\":\"road_length\",\"type\":[\"null\",\"double\"]},{\"name\":\"road_length_delta\",\"type\":[\"null\",\"double\"]},{\"name\":\"contrib_type\",\"type\":{\"type\":\"enum\",\"name\":\"AvroContribType\",\"symbols\":[\"CREATED\",\"DELETED\",\"TAG\",\"GEOMETRY\",\"TAG_GEOMETRY\",\"NONE\"]}},{\"name\":\"country_iso_a3\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroHOTStats> ENCODER =
      new BinaryMessageEncoder<AvroHOTStats>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroHOTStats> DECODER =
      new BinaryMessageDecoder<AvroHOTStats>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AvroHOTStats> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AvroHOTStats> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AvroHOTStats> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroHOTStats>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AvroHOTStats to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AvroHOTStats from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AvroHOTStats instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AvroHOTStats fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private org.heigit.ohsome.now.parquet.avro.AvroContribId contrib_id;
   private long osm_id;
   private long changeset_id;
   private long changeset_timestamp;
   private java.util.List<java.lang.CharSequence> hashtags;
   private int user_id;
   private java.lang.Integer tree;
   private java.lang.Double building_area;
   private java.lang.Double building_area_delta;
   private java.lang.Double road_length;
   private java.lang.Double road_length_delta;
   private org.heigit.ohsome.now.parquet.avro.AvroContribType contrib_type;
   private java.util.List<java.lang.CharSequence> country_iso_a3;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroHOTStats() {}

  /**
   * All-args constructor.
   * @param contrib_id The new value for contrib_id
   * @param osm_id The new value for osm_id
   * @param changeset_id The new value for changeset_id
   * @param changeset_timestamp The new value for changeset_timestamp
   * @param hashtags The new value for hashtags
   * @param user_id The new value for user_id
   * @param tree The new value for tree
   * @param building_area The new value for building_area
   * @param building_area_delta The new value for building_area_delta
   * @param road_length The new value for road_length
   * @param road_length_delta The new value for road_length_delta
   * @param contrib_type The new value for contrib_type
   * @param country_iso_a3 The new value for country_iso_a3
   */
  public AvroHOTStats(org.heigit.ohsome.now.parquet.avro.AvroContribId contrib_id, java.lang.Long osm_id, java.lang.Long changeset_id, java.lang.Long changeset_timestamp, java.util.List<java.lang.CharSequence> hashtags, java.lang.Integer user_id, java.lang.Integer tree, java.lang.Double building_area, java.lang.Double building_area_delta, java.lang.Double road_length, java.lang.Double road_length_delta, org.heigit.ohsome.now.parquet.avro.AvroContribType contrib_type, java.util.List<java.lang.CharSequence> country_iso_a3) {
    this.contrib_id = contrib_id;
    this.osm_id = osm_id;
    this.changeset_id = changeset_id;
    this.changeset_timestamp = changeset_timestamp;
    this.hashtags = hashtags;
    this.user_id = user_id;
    this.tree = tree;
    this.building_area = building_area;
    this.building_area_delta = building_area_delta;
    this.road_length = road_length;
    this.road_length_delta = road_length_delta;
    this.contrib_type = contrib_type;
    this.country_iso_a3 = country_iso_a3;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return contrib_id;
    case 1: return osm_id;
    case 2: return changeset_id;
    case 3: return changeset_timestamp;
    case 4: return hashtags;
    case 5: return user_id;
    case 6: return tree;
    case 7: return building_area;
    case 8: return building_area_delta;
    case 9: return road_length;
    case 10: return road_length_delta;
    case 11: return contrib_type;
    case 12: return country_iso_a3;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: contrib_id = (org.heigit.ohsome.now.parquet.avro.AvroContribId)value$; break;
    case 1: osm_id = (java.lang.Long)value$; break;
    case 2: changeset_id = (java.lang.Long)value$; break;
    case 3: changeset_timestamp = (java.lang.Long)value$; break;
    case 4: hashtags = (java.util.List<java.lang.CharSequence>)value$; break;
    case 5: user_id = (java.lang.Integer)value$; break;
    case 6: tree = (java.lang.Integer)value$; break;
    case 7: building_area = (java.lang.Double)value$; break;
    case 8: building_area_delta = (java.lang.Double)value$; break;
    case 9: road_length = (java.lang.Double)value$; break;
    case 10: road_length_delta = (java.lang.Double)value$; break;
    case 11: contrib_type = (org.heigit.ohsome.now.parquet.avro.AvroContribType)value$; break;
    case 12: country_iso_a3 = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'contrib_id' field.
   * @return The value of the 'contrib_id' field.
   */
  public org.heigit.ohsome.now.parquet.avro.AvroContribId getContribId() {
    return contrib_id;
  }


  /**
   * Sets the value of the 'contrib_id' field.
   * @param value the value to set.
   */
  public void setContribId(org.heigit.ohsome.now.parquet.avro.AvroContribId value) {
    this.contrib_id = value;
  }

  /**
   * Gets the value of the 'osm_id' field.
   * @return The value of the 'osm_id' field.
   */
  public long getOsmId() {
    return osm_id;
  }


  /**
   * Sets the value of the 'osm_id' field.
   * @param value the value to set.
   */
  public void setOsmId(long value) {
    this.osm_id = value;
  }

  /**
   * Gets the value of the 'changeset_id' field.
   * @return The value of the 'changeset_id' field.
   */
  public long getChangesetId() {
    return changeset_id;
  }


  /**
   * Sets the value of the 'changeset_id' field.
   * @param value the value to set.
   */
  public void setChangesetId(long value) {
    this.changeset_id = value;
  }

  /**
   * Gets the value of the 'changeset_timestamp' field.
   * @return The value of the 'changeset_timestamp' field.
   */
  public long getChangesetTimestamp() {
    return changeset_timestamp;
  }


  /**
   * Sets the value of the 'changeset_timestamp' field.
   * @param value the value to set.
   */
  public void setChangesetTimestamp(long value) {
    this.changeset_timestamp = value;
  }

  /**
   * Gets the value of the 'hashtags' field.
   * @return The value of the 'hashtags' field.
   */
  public java.util.List<java.lang.CharSequence> getHashtags() {
    return hashtags;
  }


  /**
   * Sets the value of the 'hashtags' field.
   * @param value the value to set.
   */
  public void setHashtags(java.util.List<java.lang.CharSequence> value) {
    this.hashtags = value;
  }

  /**
   * Gets the value of the 'user_id' field.
   * @return The value of the 'user_id' field.
   */
  public int getUserId() {
    return user_id;
  }


  /**
   * Sets the value of the 'user_id' field.
   * @param value the value to set.
   */
  public void setUserId(int value) {
    this.user_id = value;
  }

  /**
   * Gets the value of the 'tree' field.
   * @return The value of the 'tree' field.
   */
  public java.lang.Integer getTree() {
    return tree;
  }


  /**
   * Sets the value of the 'tree' field.
   * @param value the value to set.
   */
  public void setTree(java.lang.Integer value) {
    this.tree = value;
  }

  /**
   * Gets the value of the 'building_area' field.
   * @return The value of the 'building_area' field.
   */
  public java.lang.Double getBuildingArea() {
    return building_area;
  }


  /**
   * Sets the value of the 'building_area' field.
   * @param value the value to set.
   */
  public void setBuildingArea(java.lang.Double value) {
    this.building_area = value;
  }

  /**
   * Gets the value of the 'building_area_delta' field.
   * @return The value of the 'building_area_delta' field.
   */
  public java.lang.Double getBuildingAreaDelta() {
    return building_area_delta;
  }


  /**
   * Sets the value of the 'building_area_delta' field.
   * @param value the value to set.
   */
  public void setBuildingAreaDelta(java.lang.Double value) {
    this.building_area_delta = value;
  }

  /**
   * Gets the value of the 'road_length' field.
   * @return The value of the 'road_length' field.
   */
  public java.lang.Double getRoadLength() {
    return road_length;
  }


  /**
   * Sets the value of the 'road_length' field.
   * @param value the value to set.
   */
  public void setRoadLength(java.lang.Double value) {
    this.road_length = value;
  }

  /**
   * Gets the value of the 'road_length_delta' field.
   * @return The value of the 'road_length_delta' field.
   */
  public java.lang.Double getRoadLengthDelta() {
    return road_length_delta;
  }


  /**
   * Sets the value of the 'road_length_delta' field.
   * @param value the value to set.
   */
  public void setRoadLengthDelta(java.lang.Double value) {
    this.road_length_delta = value;
  }

  /**
   * Gets the value of the 'contrib_type' field.
   * @return The value of the 'contrib_type' field.
   */
  public org.heigit.ohsome.now.parquet.avro.AvroContribType getContribType() {
    return contrib_type;
  }


  /**
   * Sets the value of the 'contrib_type' field.
   * @param value the value to set.
   */
  public void setContribType(org.heigit.ohsome.now.parquet.avro.AvroContribType value) {
    this.contrib_type = value;
  }

  /**
   * Gets the value of the 'country_iso_a3' field.
   * @return The value of the 'country_iso_a3' field.
   */
  public java.util.List<java.lang.CharSequence> getCountryIsoA3() {
    return country_iso_a3;
  }


  /**
   * Sets the value of the 'country_iso_a3' field.
   * @param value the value to set.
   */
  public void setCountryIsoA3(java.util.List<java.lang.CharSequence> value) {
    this.country_iso_a3 = value;
  }

  /**
   * Creates a new AvroHOTStats RecordBuilder.
   * @return A new AvroHOTStats RecordBuilder
   */
  public static org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder newBuilder() {
    return new org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder();
  }

  /**
   * Creates a new AvroHOTStats RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroHOTStats RecordBuilder
   */
  public static org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder newBuilder(org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder other) {
    if (other == null) {
      return new org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder();
    } else {
      return new org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder(other);
    }
  }

  /**
   * Creates a new AvroHOTStats RecordBuilder by copying an existing AvroHOTStats instance.
   * @param other The existing instance to copy.
   * @return A new AvroHOTStats RecordBuilder
   */
  public static org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder newBuilder(org.heigit.ohsome.now.parquet.avro.AvroHOTStats other) {
    if (other == null) {
      return new org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder();
    } else {
      return new org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder(other);
    }
  }

  /**
   * RecordBuilder for AvroHOTStats instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroHOTStats>
    implements org.apache.avro.data.RecordBuilder<AvroHOTStats> {

    private org.heigit.ohsome.now.parquet.avro.AvroContribId contrib_id;
    private long osm_id;
    private long changeset_id;
    private long changeset_timestamp;
    private java.util.List<java.lang.CharSequence> hashtags;
    private int user_id;
    private java.lang.Integer tree;
    private java.lang.Double building_area;
    private java.lang.Double building_area_delta;
    private java.lang.Double road_length;
    private java.lang.Double road_length_delta;
    private org.heigit.ohsome.now.parquet.avro.AvroContribType contrib_type;
    private java.util.List<java.lang.CharSequence> country_iso_a3;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.contrib_id)) {
        this.contrib_id = data().deepCopy(fields()[0].schema(), other.contrib_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.osm_id)) {
        this.osm_id = data().deepCopy(fields()[1].schema(), other.osm_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.changeset_id)) {
        this.changeset_id = data().deepCopy(fields()[2].schema(), other.changeset_id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.changeset_timestamp)) {
        this.changeset_timestamp = data().deepCopy(fields()[3].schema(), other.changeset_timestamp);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.hashtags)) {
        this.hashtags = data().deepCopy(fields()[4].schema(), other.hashtags);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.user_id)) {
        this.user_id = data().deepCopy(fields()[5].schema(), other.user_id);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.tree)) {
        this.tree = data().deepCopy(fields()[6].schema(), other.tree);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.building_area)) {
        this.building_area = data().deepCopy(fields()[7].schema(), other.building_area);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.building_area_delta)) {
        this.building_area_delta = data().deepCopy(fields()[8].schema(), other.building_area_delta);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.road_length)) {
        this.road_length = data().deepCopy(fields()[9].schema(), other.road_length);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.road_length_delta)) {
        this.road_length_delta = data().deepCopy(fields()[10].schema(), other.road_length_delta);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.contrib_type)) {
        this.contrib_type = data().deepCopy(fields()[11].schema(), other.contrib_type);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.country_iso_a3)) {
        this.country_iso_a3 = data().deepCopy(fields()[12].schema(), other.country_iso_a3);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing AvroHOTStats instance
     * @param other The existing instance to copy.
     */
    private Builder(org.heigit.ohsome.now.parquet.avro.AvroHOTStats other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.contrib_id)) {
        this.contrib_id = data().deepCopy(fields()[0].schema(), other.contrib_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.osm_id)) {
        this.osm_id = data().deepCopy(fields()[1].schema(), other.osm_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.changeset_id)) {
        this.changeset_id = data().deepCopy(fields()[2].schema(), other.changeset_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.changeset_timestamp)) {
        this.changeset_timestamp = data().deepCopy(fields()[3].schema(), other.changeset_timestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hashtags)) {
        this.hashtags = data().deepCopy(fields()[4].schema(), other.hashtags);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.user_id)) {
        this.user_id = data().deepCopy(fields()[5].schema(), other.user_id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.tree)) {
        this.tree = data().deepCopy(fields()[6].schema(), other.tree);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.building_area)) {
        this.building_area = data().deepCopy(fields()[7].schema(), other.building_area);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.building_area_delta)) {
        this.building_area_delta = data().deepCopy(fields()[8].schema(), other.building_area_delta);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.road_length)) {
        this.road_length = data().deepCopy(fields()[9].schema(), other.road_length);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.road_length_delta)) {
        this.road_length_delta = data().deepCopy(fields()[10].schema(), other.road_length_delta);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.contrib_type)) {
        this.contrib_type = data().deepCopy(fields()[11].schema(), other.contrib_type);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.country_iso_a3)) {
        this.country_iso_a3 = data().deepCopy(fields()[12].schema(), other.country_iso_a3);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'contrib_id' field.
      * @return The value.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroContribId getContribId() {
      return contrib_id;
    }


    /**
      * Sets the value of the 'contrib_id' field.
      * @param value The value of 'contrib_id'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setContribId(org.heigit.ohsome.now.parquet.avro.AvroContribId value) {
      validate(fields()[0], value);
      this.contrib_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'contrib_id' field has been set.
      * @return True if the 'contrib_id' field has been set, false otherwise.
      */
    public boolean hasContribId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'contrib_id' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearContribId() {
      contrib_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'osm_id' field.
      * @return The value.
      */
    public long getOsmId() {
      return osm_id;
    }


    /**
      * Sets the value of the 'osm_id' field.
      * @param value The value of 'osm_id'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setOsmId(long value) {
      validate(fields()[1], value);
      this.osm_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'osm_id' field has been set.
      * @return True if the 'osm_id' field has been set, false otherwise.
      */
    public boolean hasOsmId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'osm_id' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearOsmId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'changeset_id' field.
      * @return The value.
      */
    public long getChangesetId() {
      return changeset_id;
    }


    /**
      * Sets the value of the 'changeset_id' field.
      * @param value The value of 'changeset_id'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setChangesetId(long value) {
      validate(fields()[2], value);
      this.changeset_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'changeset_id' field has been set.
      * @return True if the 'changeset_id' field has been set, false otherwise.
      */
    public boolean hasChangesetId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'changeset_id' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearChangesetId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'changeset_timestamp' field.
      * @return The value.
      */
    public long getChangesetTimestamp() {
      return changeset_timestamp;
    }


    /**
      * Sets the value of the 'changeset_timestamp' field.
      * @param value The value of 'changeset_timestamp'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setChangesetTimestamp(long value) {
      validate(fields()[3], value);
      this.changeset_timestamp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'changeset_timestamp' field has been set.
      * @return True if the 'changeset_timestamp' field has been set, false otherwise.
      */
    public boolean hasChangesetTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'changeset_timestamp' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearChangesetTimestamp() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'hashtags' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getHashtags() {
      return hashtags;
    }


    /**
      * Sets the value of the 'hashtags' field.
      * @param value The value of 'hashtags'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setHashtags(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.hashtags = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'hashtags' field has been set.
      * @return True if the 'hashtags' field has been set, false otherwise.
      */
    public boolean hasHashtags() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'hashtags' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearHashtags() {
      hashtags = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_id' field.
      * @return The value.
      */
    public int getUserId() {
      return user_id;
    }


    /**
      * Sets the value of the 'user_id' field.
      * @param value The value of 'user_id'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setUserId(int value) {
      validate(fields()[5], value);
      this.user_id = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'user_id' field has been set.
      * @return True if the 'user_id' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'user_id' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearUserId() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'tree' field.
      * @return The value.
      */
    public java.lang.Integer getTree() {
      return tree;
    }


    /**
      * Sets the value of the 'tree' field.
      * @param value The value of 'tree'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setTree(java.lang.Integer value) {
      validate(fields()[6], value);
      this.tree = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'tree' field has been set.
      * @return True if the 'tree' field has been set, false otherwise.
      */
    public boolean hasTree() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'tree' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearTree() {
      tree = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'building_area' field.
      * @return The value.
      */
    public java.lang.Double getBuildingArea() {
      return building_area;
    }


    /**
      * Sets the value of the 'building_area' field.
      * @param value The value of 'building_area'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setBuildingArea(java.lang.Double value) {
      validate(fields()[7], value);
      this.building_area = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'building_area' field has been set.
      * @return True if the 'building_area' field has been set, false otherwise.
      */
    public boolean hasBuildingArea() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'building_area' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearBuildingArea() {
      building_area = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'building_area_delta' field.
      * @return The value.
      */
    public java.lang.Double getBuildingAreaDelta() {
      return building_area_delta;
    }


    /**
      * Sets the value of the 'building_area_delta' field.
      * @param value The value of 'building_area_delta'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setBuildingAreaDelta(java.lang.Double value) {
      validate(fields()[8], value);
      this.building_area_delta = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'building_area_delta' field has been set.
      * @return True if the 'building_area_delta' field has been set, false otherwise.
      */
    public boolean hasBuildingAreaDelta() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'building_area_delta' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearBuildingAreaDelta() {
      building_area_delta = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'road_length' field.
      * @return The value.
      */
    public java.lang.Double getRoadLength() {
      return road_length;
    }


    /**
      * Sets the value of the 'road_length' field.
      * @param value The value of 'road_length'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setRoadLength(java.lang.Double value) {
      validate(fields()[9], value);
      this.road_length = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'road_length' field has been set.
      * @return True if the 'road_length' field has been set, false otherwise.
      */
    public boolean hasRoadLength() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'road_length' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearRoadLength() {
      road_length = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'road_length_delta' field.
      * @return The value.
      */
    public java.lang.Double getRoadLengthDelta() {
      return road_length_delta;
    }


    /**
      * Sets the value of the 'road_length_delta' field.
      * @param value The value of 'road_length_delta'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setRoadLengthDelta(java.lang.Double value) {
      validate(fields()[10], value);
      this.road_length_delta = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'road_length_delta' field has been set.
      * @return True if the 'road_length_delta' field has been set, false otherwise.
      */
    public boolean hasRoadLengthDelta() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'road_length_delta' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearRoadLengthDelta() {
      road_length_delta = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'contrib_type' field.
      * @return The value.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroContribType getContribType() {
      return contrib_type;
    }


    /**
      * Sets the value of the 'contrib_type' field.
      * @param value The value of 'contrib_type'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setContribType(org.heigit.ohsome.now.parquet.avro.AvroContribType value) {
      validate(fields()[11], value);
      this.contrib_type = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'contrib_type' field has been set.
      * @return True if the 'contrib_type' field has been set, false otherwise.
      */
    public boolean hasContribType() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'contrib_type' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearContribType() {
      contrib_type = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'country_iso_a3' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getCountryIsoA3() {
      return country_iso_a3;
    }


    /**
      * Sets the value of the 'country_iso_a3' field.
      * @param value The value of 'country_iso_a3'.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder setCountryIsoA3(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[12], value);
      this.country_iso_a3 = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'country_iso_a3' field has been set.
      * @return True if the 'country_iso_a3' field has been set, false otherwise.
      */
    public boolean hasCountryIsoA3() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'country_iso_a3' field.
      * @return This builder.
      */
    public org.heigit.ohsome.now.parquet.avro.AvroHOTStats.Builder clearCountryIsoA3() {
      country_iso_a3 = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroHOTStats build() {
      try {
        AvroHOTStats record = new AvroHOTStats();
        record.contrib_id = fieldSetFlags()[0] ? this.contrib_id : (org.heigit.ohsome.now.parquet.avro.AvroContribId) defaultValue(fields()[0]);
        record.osm_id = fieldSetFlags()[1] ? this.osm_id : (java.lang.Long) defaultValue(fields()[1]);
        record.changeset_id = fieldSetFlags()[2] ? this.changeset_id : (java.lang.Long) defaultValue(fields()[2]);
        record.changeset_timestamp = fieldSetFlags()[3] ? this.changeset_timestamp : (java.lang.Long) defaultValue(fields()[3]);
        record.hashtags = fieldSetFlags()[4] ? this.hashtags : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[4]);
        record.user_id = fieldSetFlags()[5] ? this.user_id : (java.lang.Integer) defaultValue(fields()[5]);
        record.tree = fieldSetFlags()[6] ? this.tree : (java.lang.Integer) defaultValue(fields()[6]);
        record.building_area = fieldSetFlags()[7] ? this.building_area : (java.lang.Double) defaultValue(fields()[7]);
        record.building_area_delta = fieldSetFlags()[8] ? this.building_area_delta : (java.lang.Double) defaultValue(fields()[8]);
        record.road_length = fieldSetFlags()[9] ? this.road_length : (java.lang.Double) defaultValue(fields()[9]);
        record.road_length_delta = fieldSetFlags()[10] ? this.road_length_delta : (java.lang.Double) defaultValue(fields()[10]);
        record.contrib_type = fieldSetFlags()[11] ? this.contrib_type : (org.heigit.ohsome.now.parquet.avro.AvroContribType) defaultValue(fields()[11]);
        record.country_iso_a3 = fieldSetFlags()[12] ? this.country_iso_a3 : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroHOTStats>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroHOTStats>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroHOTStats>
    READER$ = (org.apache.avro.io.DatumReader<AvroHOTStats>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeFixed(this.contrib_id.bytes(), 0, 25);

    out.writeLong(this.osm_id);

    out.writeLong(this.changeset_id);

    out.writeLong(this.changeset_timestamp);

    long size0 = this.hashtags.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.lang.CharSequence e0: this.hashtags) {
      actualSize0++;
      out.startItem();
      out.writeString(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    out.writeInt(this.user_id);

    if (this.tree == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.tree);
    }

    if (this.building_area == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.building_area);
    }

    if (this.building_area_delta == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.building_area_delta);
    }

    if (this.road_length == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.road_length);
    }

    if (this.road_length_delta == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.road_length_delta);
    }

    out.writeEnum(this.contrib_type.ordinal());

    long size1 = this.country_iso_a3.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (java.lang.CharSequence e1: this.country_iso_a3) {
      actualSize1++;
      out.startItem();
      out.writeString(e1);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.contrib_id == null) {
        this.contrib_id = new org.heigit.ohsome.now.parquet.avro.AvroContribId();
      }
      in.readFixed(this.contrib_id.bytes(), 0, 25);

      this.osm_id = in.readLong();

      this.changeset_id = in.readLong();

      this.changeset_timestamp = in.readLong();

      long size0 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a0 = this.hashtags;
      if (a0 == null) {
        a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("hashtags").schema());
        this.hashtags = a0;
      } else a0.clear();
      SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
          a0.add(e0);
        }
      }

      this.user_id = in.readInt();

      if (in.readIndex() != 1) {
        in.readNull();
        this.tree = null;
      } else {
        this.tree = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.building_area = null;
      } else {
        this.building_area = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.building_area_delta = null;
      } else {
        this.building_area_delta = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.road_length = null;
      } else {
        this.road_length = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.road_length_delta = null;
      } else {
        this.road_length_delta = in.readDouble();
      }

      this.contrib_type = org.heigit.ohsome.now.parquet.avro.AvroContribType.values()[in.readEnum()];

      long size1 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a1 = this.country_iso_a3;
      if (a1 == null) {
        a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("country_iso_a3").schema());
        this.country_iso_a3 = a1;
      } else a1.clear();
      SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
          e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
          a1.add(e1);
        }
      }

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.contrib_id == null) {
            this.contrib_id = new org.heigit.ohsome.now.parquet.avro.AvroContribId();
          }
          in.readFixed(this.contrib_id.bytes(), 0, 25);
          break;

        case 1:
          this.osm_id = in.readLong();
          break;

        case 2:
          this.changeset_id = in.readLong();
          break;

        case 3:
          this.changeset_timestamp = in.readLong();
          break;

        case 4:
          long size0 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a0 = this.hashtags;
          if (a0 == null) {
            a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("hashtags").schema());
            this.hashtags = a0;
          } else a0.clear();
          SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
              a0.add(e0);
            }
          }
          break;

        case 5:
          this.user_id = in.readInt();
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.tree = null;
          } else {
            this.tree = in.readInt();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.building_area = null;
          } else {
            this.building_area = in.readDouble();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.building_area_delta = null;
          } else {
            this.building_area_delta = in.readDouble();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.road_length = null;
          } else {
            this.road_length = in.readDouble();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.road_length_delta = null;
          } else {
            this.road_length_delta = in.readDouble();
          }
          break;

        case 11:
          this.contrib_type = org.heigit.ohsome.now.parquet.avro.AvroContribType.values()[in.readEnum()];
          break;

        case 12:
          long size1 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a1 = this.country_iso_a3;
          if (a1 == null) {
            a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("country_iso_a3").schema());
            this.country_iso_a3 = a1;
          } else a1.clear();
          SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
              e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
              a1.add(e1);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










